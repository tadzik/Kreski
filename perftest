#!/usr/bin/env perl
use 5.012;
use List::Util qw(min max sum);
use Time::HiRes 'time';
use Getopt::Long;
use Statistics::Basic ':all';

my $n;
my $runs;

GetOptions("n=i" => \$n, "r=i" => \$runs);
if (!$n or !$runs) {
    say "Usage: $0 -n <number of pairs> -r <number of runs>";
    exit 1;
}

sub measure {
    my $command = shift;

    my $before = time;
    system($command);
    my $after = time;
    printf "(%d seconds elapsed)\n", $after - $before;

    return $after - $before;
}

my @times;
my @times_sort;

my $time ='/usr/bin/time -o /dev/stdout -f %e';

for (1..$runs) {
    system("./generator $n > dane$n");
    say "Running the normal variant";
    push @times, measure("./wyliczator < dane$n >/dev/null");

    say "Running the sorting variant";
    push @times_sort, measure("./wyliczator --sort < dane$n >/dev/null");
}

unlink "dane$n";

sub printstats {
    my @times = @_;

    say "Total:   ", sum @times;
    say "Minimum: ", min @times;
    say "Maximum: ", max @times;
    say "Average: ", sum(@times) / +@times;
    say "Median:  ", median(@times);
}

say "# Normal";
printstats @times;

say "# With --sort";
printstats @times_sort;
